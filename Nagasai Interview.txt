Problem-1: Create a small calculator which performs operations such as Addition, Subtraction, Multiplication and Division using class.
  Calculator inputs :> ‘a’, ‘b’ and ‘type of operation’
  Datatype :> ‘a’ = double, ‘b’ = double, ‘type of operation’ = string
Ans)
class Calculator:
    def __init__(self, a: float, b: float, operation: str):
        self.a = a
        self.b = b
        self.operation = operation.lower()

    def calculate(self):
        if self.operation == 'add':
            return self.a + self.b
        elif self.operation == 'subtract':
            return self.a - self.b
        elif self.operation == 'multiply':
            return self.a * self.b
        elif self.operation == 'divide':
            if self.b != 0:
                return self.a / self.b
            else:
                return "Error: Division by zero"
        else:
            return "Error: Invalid operation"
-----------------------------------------------------------------------------------------------------------------------------------------------------
Problem-2: With a single integer as the input, generate the following until a = x [series of numbers as shown in below examples]
 
  Output: (examples)
    1) input a = 1, then output : 1
    2) input a = 2, then output : 1, 3
    3) input a = 3, then output : 1, 3, 5
    4) input a = 4, then output : 1, 3, 5, 7
    .
    .
    5) input a = x, then output : 1, 3, 5, 7,

ANS)
def generate_odd_series(a: int):
    result = []
    for i in range(a):
        result.append(2 * i + 1)  
    return result
a = int(input("Enter a number: "))
output = generate_odd_series(a)
print("Output:", ", ".join(map(str, output)))
-----------------------------------------------------------------------------------------------------------------------------------------------------
Problem-3: With a single integer as the input, generate the following until a = x [series of numbers as shown in below examples]
 
  Output: (examples)
    1) input a = 1, then output : 1
    2) input a = 2, then output : 1
    3) input a = 3, then output : 1, 3, 5
    4) input a = 4, then output : 1, 3, 5
    5) input a = 5, then output : 1, 3, 5, 7, 9
    6) input a = 6, then output : 1, 3, 5, 7, 9
    .
    .
    7) input a = x, then output : 1, 3, 5, 7, .......
ANS)
def generate_series(a: int):
    if a % 2 == 0:
        a -= 1
    series = [2 * i + 1 for i in range(a)]
    
    return series

Problem:1)
a = int(input("Enter a number: "))
output = generate_series(a)
Problem-4: Get the total count of number listed in the dictionary which is multiple of [1,2,3,4,5,6,7,8,9]
  (examples)
  input: [1,2,8,9,12,46,76,82,15,20,30]
  Output: 
    {1: 11, 2: 8, 3: 4, 4: 4, 5: 3, 6: 2, 7: 0, 8: 1, 9: 1}
----------------------------------------------------------------
ANS)Problem-1
def count_multiples(numbers):
    result = {}
    for i in range(1, 10):
        count = sum(1 for num in numbers if num % i == 0)
        result[i] = count
    return result
input_list = [1, 2, 8, 9, 12, 46, 76, 82, 15, 20, 30
output = count_multiples(input_list)
print(output)
------------------------------------------------------------------------------------------------------------------------
Problem:2)
Problem-2: With a single integer as the input, generate the following until a = x [series of numbers as shown in below examples] Output: (examples)
    1) input a = 1, then output : 1
    2) input a = 2, then output : 1
    3) input a = 3, then output : 1, 3, 5
    4) input a = 4, then output : 1, 3, 5
    5) input a = 5, then output : 1, 3, 5, 7, 9
    6) input a = 6, then output : 1, 3, 5, 7, 9
    .
    .
    7) input a = x, then output : 1, 3, 5, 7, 

ANS)
def generate_custom_odd_series(a: int):
    count = a if a % 2 != 0 else a - 1
    result = [2 * i + 1 for i in range(count)]    
    return result
a = int(input("Enter a number: "))
output = generate_custom_odd_series(a)
print("Output:", ", ".join(map(str, output)))
 -------------------------------------------------------------------------------------------------------------------------------------------------------
Problem-3: With a single integer as the input, generate the following until a = x [series of numbers as shown in below examples]
 
  Output: (examples)
    1) input a = 1, then output : 1
    2) input a = 2, then output : 1
    3) input a = 3, then output : 1, 3, 5
    4) input a = 4, then output : 1, 3, 5
    5) input a = 5, then output : 1, 3, 5, 7, 9
    6) input a = 6, then output : 1, 3, 5, 7, 9
    .
    .
    7) input a = x, then output : 1, 3, 5, 7
ANS)

def generate_series(a: int):
    if a % 2 == 0:
        a -= 1
    series = [2 * i + 1 for i in range(a)]
    
    return series
a = int(input("Enter a number: "))
output = generate_series(a)
print("Output:", ", ".join(map(str, output)))
--------------------------------------------------------------------------------------------------------------
Problem:4)
Problem-4: Get the total count of number listed in the dictionary which is multiple of [1,2,3,4,5,6,7,8,9]
  (examples)
  input: [1,2,8,9,12,46,76,82,15,20,30]
  Output: 
    {1: 11, 2: 8, 3: 4, 4: 4, 5: 3, 6: 2, 7: 0, 8: 1, 9: 1}

ANS)

def count_multiples(numbers):
    result = {}
    for i in range(1, 10):
        count = sum(1 for num in numbers if num % i == 0)
        result[i] = count
    return result
input_list = [1, 2, 8, 9, 12, 46, 76, 82, 15, 20, 30]
output = count_multiples(input_list)
print(output)


